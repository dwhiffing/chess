{"version":3,"sources":["components/Flex.js","screens/Room/useRoomState.js","components/Action.js","constants.js","screens/Room/components/Header.js","components/Card.js","components/CardStack.js","screens/Room/components/Evidence.js","screens/Room/components/Seats.js","screens/Room/components/Actions.js","screens/Room/index.js","screens/Lobby.js","index.js"],"names":["Flex","variant","flex","children","style","passedStyles","props","display","test","flexDirection","justifyContent","alignItems","Box","initialRoomState","players","activeCrime","sceneDeck","toJSON","roundsLeft","phaseIndex","phaseTimer","CARDS_PER_ROUND","Action","Button","margin","PHASES","COLORS","Header","className","onClick","room","leave","bind","Typography","minWidth","phase","Card","selected","backgroundColor","border","fontWeight","textAlign","color","CardStack","cards","width","flexWrap","map","value","n","getBackgroundColor","Evidence","renderEvidence","scene","item","i","role","EvidenceItem","align","type","values","filter","markedValueIndex","send","Seats","renderSeats","player","index","Seat","state","showSetScientistButton","currentPlayer","isAdmin","playerId","id","label","name","isClient","canSelectCards","opacity","padding","guess","clue","means","isClose","accusedPlayer","find","p","clues","includes","guessString","connected","remainingConnectionTime","selectedMeans","setSelectedMeans","selectedClue","setSelectedClue","Actions","zIndex","PreGameActions","useState","numCards","_setNumCards","phaseTimerMultiple","_setPhaseTimerMultiple","disabled","length","thing","prompt","MurderActions","EvidenceActions","activeScene","sceneCardsThisRound","num","murderer","m","accomplice","PresentationActions","Room","setRoom","roomState","setServerState","message","setMessage","useEffect","onStateChange","some","sessionId","localStorage","removeItem","onMessage","opts","setTimeout","onLeave","s","slice","sort","o","a","b","useRoomState","console","log","paddingTop","paddingBottom","Snackbar","open","autoHideDuration","bottom","Alert","elevation","severity","Lobby","intervalRef","useRef","autoConnectAttempted","availableRooms","setAvailableRooms","getItem","faker","firstName","setName","enterRoom","useCallback","setItem","createRoom","roomName","colyseus","window","create","joinRoom","roomId","joinRoomWithReconnect","Error","alert","getAvailableRooms","current","setInterval","clearInterval","lastRoom","height","TextField","placeholder","marginBottom","onChange","e","truncate","target","omission","minHeight","RoomListItem","cursor","textDecoration","metadata","reconnect","joinById","App","Client","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2efe8cdd.chunk.js","sourcesContent":["import React from 'react'\nimport { Box } from '@material-ui/core'\n\nexport const Flex = ({\n  variant,\n  flex = 1,\n  children,\n  style: passedStyles = {},\n  ...props\n}) => {\n  let style = { display: 'flex', flex }\n\n  if (/column/.test(variant)) {\n    style.flexDirection = 'column'\n  }\n\n  if (/justify-between/.test(variant)) {\n    style.justifyContent = 'space-between'\n  }\n\n  if (/align-center/.test(variant)) {\n    style.alignItems = 'center'\n  } else if (/justify-center/.test(variant)) {\n    style.justifyContent = 'center'\n  } else if (/center/.test(variant)) {\n    style.justifyContent = 'center'\n    style.alignItems = 'center'\n  }\n\n  return (\n    <Box style={{ ...style, ...passedStyles }} {...props}>\n      {children}\n    </Box>\n  )\n}\n","import { useEffect, useState } from 'react'\n\n// TODO: Allow murderer to guess who witness is if they are about to lose\n// TODO: Send evidence marking over server with player color?\n// TODO: Refine game content/copy and add images for clues/means\n\nexport function useRoomState({ room, setRoom }) {\n  const [roomState, setServerState] = useState(initialRoomState)\n  const [selectedMeans, setSelectedMeans] = useState()\n  const [selectedClue, setSelectedClue] = useState()\n  const [message, setMessage] = useState('')\n  const { sceneDeck: scene, phaseIndex: phase, players } = roomState\n\n  useEffect(() => {\n    if (!room) return\n\n    room.onStateChange((state) => {\n      if (!state.players.toJSON().some((p) => p.id === room.sessionId)) {\n        room.leave()\n        localStorage.removeItem(room.id)\n        setServerState(initialRoomState)\n        setRoom()\n      }\n      setServerState({ ...state })\n    })\n\n    room.onMessage('message', (opts) => {\n      setMessage(opts)\n      setTimeout(() => setMessage(''), 5000)\n    })\n\n    room.onLeave(() => {\n      localStorage.removeItem(room.id)\n      setServerState(initialRoomState)\n      setRoom()\n    })\n  }, [room, setRoom])\n\n  useEffect(() => {\n    setSelectedMeans()\n    setSelectedClue()\n  }, [phase])\n\n  const currentPlayer = players.find((p) => p.id === room.sessionId) || {}\n  const renderEvidence = phase === 1 || phase === 2\n  const renderSeats =\n    phase === -1 ||\n    (phase === 0 && currentPlayer.role === 2) ||\n    (phase === 1 && currentPlayer.role !== 1) ||\n    phase === 2\n\n  const sceneCardsThisRound = CARDS_PER_ROUND[2 - roomState.roundsLeft]\n  const activeScene = scene\n    .toJSON()\n    .filter((s) => s.markedValueIndex > -1)\n    .filter(({ markedValueIndex: m }) => currentPlayer.role === 1 || m > -1)\n\n  const sceneDeck = scene\n    .toJSON()\n    .slice(\n      0,\n      sceneCardsThisRound +\n        (phase === 1 && activeScene.length < sceneCardsThisRound ? 2 : -1),\n    )\n\n  return {\n    activeCrime: roomState.activeCrime.toJSON\n      ? roomState.activeCrime.toJSON()\n      : [],\n    message,\n    room,\n    phase,\n    phaseTimer: roomState.phaseTimer,\n    currentPlayer,\n    selectedClue,\n    selectedMeans,\n    renderSeats,\n    renderEvidence,\n    sceneCardsThisRound,\n    activeScene,\n    sceneDeck: sceneDeck.sort((s) => (s.markedValueIndex === -1 ? 1 : -1)),\n    role: currentPlayer.role,\n    scene: currentPlayer.role === 1 && phase === 1 ? sceneDeck : activeScene,\n    setSelectedMeans: (s) => setSelectedMeans((o) => (o === s ? null : s)),\n    setSelectedClue: (s) => setSelectedClue((o) => (o === s ? null : s)),\n    players: roomState.players.toJSON\n      ? roomState.players.toJSON().sort((a, b) => (a.role === 1 ? -1 : 1))\n      : [],\n  }\n}\n\nconst initialRoomState = {\n  players: [],\n  activeCrime: [],\n  sceneDeck: { toJSON: () => [] },\n  roundsLeft: -1,\n  phaseIndex: -1,\n  phaseTimer: -1,\n}\n\nconst CARDS_PER_ROUND = [5, 6, 7]\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nexport const Action = ({ variant = 'contained', ...props }) => (\n  <Button variant={variant} {...props} style={{ margin: 8 }} />\n)\n","export const PHASES = [\n  'PRE-GAME',\n  'MURDER PHASE',\n  'EVIDENCE PHASE',\n  'PRESENTATION PHASE',\n]\n\nexport const COLORS = [\n  '#0071AA',\n  '#ECE4B7',\n  '#E8C340',\n  '#D33830',\n  '#A06033',\n  '#EA9438',\n  '#E27C81',\n  '#7FC12E',\n  '#525252',\n  '#AA5BAF',\n]\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Action } from '../../../components/Action'\nimport { Flex } from '../../../components/Flex'\nimport { PHASES } from '../../../constants'\n\nexport const Header = (props) => (\n  <Flex className=\"header\" variant=\"row align-center justify-between\">\n    <Action onClick={props.room.leave.bind(props.room)}>Leave</Action>\n\n    <Typography style={{ minWidth: 50 }}>{PHASES[props.phase + 1]}</Typography>\n\n    <Typography style={{ minWidth: 50 }}>\n      {props.phase === 2 ? props.phaseTimer : ''}\n    </Typography>\n  </Flex>\n)\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Flex } from './Flex'\n\nexport const Card = ({ children, selected, backgroundColor, onClick }) => (\n  <Flex\n    className=\"card\"\n    variant=\"center\"\n    onClick={onClick}\n    style={{ border: selected ? '4px solid black' : null, backgroundColor }}\n  >\n    <Typography\n      style={{ fontWeight: 'bold', textAlign: 'center', color: 'white' }}\n    >\n      {children}\n    </Typography>\n  </Flex>\n)\n","import React from 'react'\nimport { Card } from './Card'\nimport { Flex } from './Flex'\n\nexport const CardStack = ({ cards, selected = () => false, ...props }) => (\n  <Flex style={{ width: '100%', flexWrap: 'wrap' }}>\n    {cards.map((value, n) => (\n      <Flex variant=\"center\" key={`card-${n}`}>\n        <Card\n          backgroundColor={props.getBackgroundColor(n)}\n          selected={selected(value)}\n          onClick={() => props.onClick(value)}\n          style={{ minWidth: 100 }}\n        >\n          {value}\n        </Card>\n      </Flex>\n    ))}\n  </Flex>\n)\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Flex } from '../../../components/Flex'\nimport { CardStack } from '../../../components/CardStack'\n\nexport const Evidence = (props) =>\n  props.renderEvidence && (\n    <Flex variant=\"justify-between\" style={{ flexWrap: 'wrap' }}>\n      {props.scene.map((item, i) => (\n        <EvidenceItem\n          key={`s${i}`}\n          role={props.role}\n          room={props.room}\n          item={item}\n        />\n      ))}\n    </Flex>\n  )\n\nconst EvidenceItem = ({ item, room, role }) => (\n  <Flex variant=\"column align-center\" style={{ margin: 8, minWidth: 300 }}>\n    <Typography variant=\"h5\" align=\"center\">\n      {item.type}\n    </Typography>\n\n    <CardStack\n      cards={item.values.filter((value, i) =>\n        role === 1\n          ? i === item.markedValueIndex || item.markedValueIndex === -1\n          : i === item.markedValueIndex,\n      )}\n      getBackgroundColor={(n) =>\n        item.markedValueIndex === -1 ? 'gray' : '#D33830'\n      }\n      onClick={(value) => room.send('MarkEvidence', { type: item.type, value })}\n    />\n  </Flex>\n)\n","import React from 'react'\nimport { Flex } from '../../../components/Flex'\nimport { Typography } from '@material-ui/core'\nimport { COLORS } from '../../../constants'\nimport { Action } from '../../../components/Action'\nimport { CardStack } from '../../../components/CardStack'\n\nexport const Seats = (props) =>\n  props.renderSeats && (\n    <Flex flex={2} variant=\"column\">\n      {props.players.map((player, i) => (\n        <Seat key={`p${i}`} player={player} index={i} {...props} />\n      ))}\n    </Flex>\n  )\n\nconst Seat = ({ player, index, phase, role, ...state }) => {\n  const showSetScientistButton = state.currentPlayer.isAdmin && phase === -1\n  const playerId = player.id\n  const label = player.name || player.id\n  const isClient = playerId === state.currentPlayer.id\n\n  const canSelectCards =\n    // murder phase and we are the murderer\n    (phase === 0 && isClient && role === 2) ||\n    // presentation phase and we aren't the scientist\n    (phase === 2 && !isClient && role !== 1)\n\n  const opacity = canSelectCards ? 'FF' : '55'\n  const color = COLORS[index]\n  const style = { border: `5px solid ${color}`, margin: 10, padding: 10 }\n  const [clue, means, isClose] = player.guess || []\n  const accusedPlayer =\n    clue && means\n      ? state.players.find(\n          (p) => p.clues.includes(clue) || p.means.includes(means),\n        )\n      : null\n  const guessString =\n    clue && means\n      ? `Accused ${accusedPlayer.name} with ${means} and ${clue}. ${\n          isClose ? 'It was close' : 'It was wrong'\n        }.`\n      : player.role !== 1\n      ? 'Can still accuse.'\n      : ''\n\n  return playerId ? (\n    <Flex variant=\"column\" style={style}>\n      <Flex>\n        <Typography\n          variant={playerId === state.currentPlayer.id ? 'h5' : 'body1'}\n        >\n          {playerId === state.currentPlayer.id ? `You (${label})` : label}\n          {player.role === 1 ? ' (Scientist)' : ''}\n        </Typography>\n\n        {phase === 2 && (\n          <Typography style={{ margin: '0 10px 10px', color: 'gray' }}>\n            {guessString}\n          </Typography>\n        )}\n      </Flex>\n\n      {!player.connected && (\n        <Typography>\n          Disconnected! ({player.remainingConnectionTime} seconds to reconnect)\n        </Typography>\n      )}\n\n      <CardStack\n        cards={player.means}\n        selected={(means) => means === state.selectedMeans}\n        getBackgroundColor={() => `#D33830${opacity}`}\n        onClick={(means) => canSelectCards && state.setSelectedMeans(means)}\n      />\n\n      <CardStack\n        cards={player.clues}\n        selected={(clue) => clue === state.selectedClue}\n        getBackgroundColor={() => `#0071AA${opacity}`}\n        onClick={(clue) => canSelectCards && state.setSelectedClue(clue)}\n      />\n\n      {phase === -1 &&\n        state.currentPlayer.isAdmin &&\n        player.id !== state.currentPlayer.id && (\n          <Action\n            onClick={() => state.room.send('Leave', { playerId: player.id })}\n          >\n            Kick\n          </Action>\n        )}\n\n      {showSetScientistButton && player.role !== 1 && (\n        <Action\n          onClick={() => state.room.send('AssignScientist', { playerId })}\n        >\n          Assign Forensic Scientist\n        </Action>\n      )}\n    </Flex>\n  ) : null\n}\n","import React, { useState } from 'react'\nimport { Flex } from '../../../components/Flex'\nimport { Action } from '../../../components/Action'\nimport { Typography } from '@material-ui/core'\n\nexport const Actions = (props) => {\n  return (\n    <Flex flex={0} variant=\"center\" className=\"actions\" zIndex={100}>\n      <Flex variant=\"column center\" style={{ padding: '4px 0' }}>\n        {props.phase === -1 && <PreGameActions {...props} />}\n        {props.phase === 0 && <MurderActions {...props} />}\n        {props.phase === 1 && <EvidenceActions {...props} />}\n        {props.phase === 2 && <PresentationActions {...props} />}\n      </Flex>\n    </Flex>\n  )\n}\n\nconst PreGameActions = ({ players, currentPlayer, room }) => {\n  const [numCards, _setNumCards] = useState(3)\n  const [phaseTimerMultiple, _setPhaseTimerMultiple] = useState(30)\n\n  const setNumCards = (n) =>\n    _setNumCards(typeof n === 'number' && n <= 5 && n >= 3 ? n : 3)\n  const setPhaseTimerMultiple = (n) =>\n    _setPhaseTimerMultiple(typeof n === 'number' && n <= 120 && n >= 5 ? n : 30)\n  return (\n    <>\n      {currentPlayer.isAdmin ? (\n        <Flex>\n          <Action\n            disabled={players.filter((p) => p.role === 1).length === 0}\n            onClick={() => room.send('Deal', { numCards, phaseTimerMultiple })}\n          >\n            Deal\n          </Action>\n          <Action\n            onClick={() => {\n              const thing = prompt(\n                'Set number of means/clue cards to deal to each player (3-5)',\n              )\n              setNumCards(+thing)\n            }}\n          >\n            Set num cards ({numCards})\n          </Action>\n          <Action\n            onClick={() => {\n              const thing = prompt(\n                'Set time per investigator in seconds (5-120)',\n              )\n              setPhaseTimerMultiple(+thing)\n            }}\n          >\n            Set timer duration ({phaseTimerMultiple})\n          </Action>\n        </Flex>\n      ) : null}\n    </>\n  )\n}\n\nconst MurderActions = ({ currentPlayer, selectedMeans, selectedClue, room }) =>\n  currentPlayer.role === 2 ? (\n    <Flex variant=\"column center\">\n      {(!selectedMeans || !selectedClue) && (\n        <Typography>\n          Select one of your Red Means cards and Blue Clue cards to plan the\n          murder.\n        </Typography>\n      )}\n      {selectedMeans && selectedClue && (\n        <Typography>\n          You will kill the victim using {selectedMeans} and leave behind{' '}\n          {selectedClue} as evidence.\n        </Typography>\n      )}\n      <Action\n        disabled={!selectedMeans || !selectedClue}\n        onClick={() => {\n          room.send('Murder', {\n            means: selectedMeans,\n            clue: selectedClue,\n          })\n        }}\n      >\n        Commit Murder\n      </Action>\n    </Flex>\n  ) : (\n    <Typography>The murder is currently happening</Typography>\n  )\n\nconst EvidenceActions = ({\n  currentPlayer,\n  activeCrime,\n  activeScene,\n  sceneCardsThisRound,\n  players,\n}) => {\n  const num = sceneCardsThisRound - activeScene.length\n  const murderer = players.find((m) => m.role === 2)\n  const accomplice = players.find((m) => m.role === 3)\n\n  return currentPlayer.role === 1 ? (\n    <Typography>\n      Mark the crime scene based on the means {activeCrime[1]} and the clue{' '}\n      {activeCrime[0]}. You have {num} remaining selection{num > 1 ? 's' : ''}.\n    </Typography>\n  ) : currentPlayer.role === 2 ? (\n    <Typography>\n      You commited the crime via {activeCrime[1]} and the clue {activeCrime[0]}.{' '}\n      {accomplice ? `Your accomplice was ${accomplice.name}` : ''}\n    </Typography>\n  ) : currentPlayer.role === 3 ? (\n    <Typography>\n      You were the accomplice of the murder using {activeCrime[1]} and the clue{' '}\n      {activeCrime[0]}. Help the murderer ({murderer.name}) avoid suspicion.\n    </Typography>\n  ) : currentPlayer.role === 4 ? (\n    <Typography>\n      You saw the murderer ({murderer.name}) and accomplice ({accomplice.name})\n      getting away from the scene. Try to draw attention to them without letting\n      them figure out you know. If they can guess you are the witness at the\n      end, they win.\n    </Typography>\n  ) : (\n    <Typography>The Forensic Scientist is investigating</Typography>\n  )\n}\n\nconst PresentationActions = ({\n  currentPlayer,\n  selectedClue,\n  activeCrime,\n  selectedMeans,\n  room,\n  role,\n}) =>\n  role !== 1 ? (\n    <>\n      {role === 2 ? (\n        <Typography>\n          You are the murderer. You killed the victim using {activeCrime[1]} and\n          left behind {activeCrime[0]} as evidence. Try to convince the others\n          it wasn't you\n        </Typography>\n      ) : (\n        <Typography>\n          Discuss the clues given by Forensics to determine the murderer, and\n          via which means (Red) and key evidence (Blue). You only get one chance\n          to accuse!\n        </Typography>\n      )}\n      {currentPlayer.guess.length === 0 && (\n        <Flex variant=\"column center\">\n          <Action\n            disabled={!selectedMeans || !selectedClue}\n            onClick={() => {\n              room.send('Accuse', {\n                means: selectedMeans,\n                clue: selectedClue,\n              })\n            }}\n          >\n            Accuse\n          </Action>\n        </Flex>\n      )}\n    </>\n  ) : (\n    <Typography>\n      Plan your next clue based on how the investigators responded to your last\n      one!\n    </Typography>\n  )\n","import React from 'react'\nimport { Flex } from '../../components/Flex'\nimport { useRoomState } from './useRoomState'\nimport { Header } from './components/Header'\nimport { Evidence } from './components/Evidence'\nimport { Seats } from './components/Seats'\nimport { Actions } from './components/Actions'\nimport { Snackbar } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nexport function Room({ room, setRoom }) {\n  const state = useRoomState({ room, setRoom })\n  console.log(state)\n\n  return (\n    <Flex variant=\"column\" style={{ paddingTop: 70, paddingBottom: 200 }}>\n      <Header {...state} />\n      <Evidence {...state} />\n      <Seats {...state} />\n      <Actions {...state} />\n\n      <Snackbar\n        open={!!state.message}\n        autoHideDuration={8000}\n        style={{ bottom: 100 }}\n      >\n        <Alert elevation={6} variant=\"filled\" severity=\"info\">\n          {state.message}\n        </Alert>\n      </Snackbar>\n    </Flex>\n  )\n}\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { Box, Typography, TextField } from '@material-ui/core'\nimport { Flex } from '../components/Flex'\nimport faker from 'faker'\nimport truncate from 'lodash/truncate'\nimport { Action } from '../components/Action'\n\n// TODO: show number of players in game, show if game is in progress and what phase\n\nexport function Lobby({ setRoom }) {\n  const intervalRef = useRef()\n  const autoConnectAttempted = useRef(false)\n  const [availableRooms, setAvailableRooms] = useState([])\n  const [name, setName] = useState(\n    localStorage.getItem('name') || faker.name.firstName(),\n  )\n\n  const enterRoom = useCallback(\n    (room, name) => {\n      localStorage.setItem('name', name)\n      localStorage.setItem(room.id, room.sessionId)\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const createRoom = useCallback(\n    async (name) => {\n      const roomName = prompt('Room name?')\n      if (!roomName) return\n\n      const colyseus = window.colyseus\n      const room = await colyseus.create('deception', { roomName, name })\n      enterRoom(room, name)\n    },\n    [enterRoom],\n  )\n\n  const joinRoom = useCallback(\n    async (roomId, name) => {\n      try {\n        const room = await joinRoomWithReconnect(roomId, name)\n        if (!room) throw new Error('Failed to join room')\n        enterRoom(room, name)\n      } catch (e) {\n        alert(e)\n        localStorage.removeItem(roomId)\n      }\n    },\n    [enterRoom],\n  )\n\n  const getAvailableRooms = useCallback(\n    async () => setAvailableRooms(await window.colyseus.getAvailableRooms()),\n    [],\n  )\n\n  useEffect(() => {\n    getAvailableRooms()\n    intervalRef.current = setInterval(getAvailableRooms, 3000)\n    return () => clearInterval(intervalRef.current)\n  }, [getAvailableRooms])\n\n  useEffect(() => {\n    if (!availableRooms) return\n    const lastRoom = availableRooms.find((room) =>\n      localStorage.getItem(room.roomId),\n    )\n\n    if (lastRoom && !autoConnectAttempted.current) {\n      autoConnectAttempted.current = true\n      joinRoom(lastRoom.roomId, name)\n    }\n  }, [availableRooms, joinRoom, name])\n\n  return (\n    <Flex variant=\"column center\" style={{ height: '100vh' }}>\n      <TextField\n        placeholder=\"Enter name\"\n        value={name}\n        style={{ marginBottom: 20 }}\n        onChange={(e) =>\n          setName(truncate(e.target.value, { length: 10, omission: '' }))\n        }\n      />\n\n      <Typography variant=\"h5\">Available Tables:</Typography>\n\n      <Flex flex={0} variant=\"column center\" style={{ minHeight: 200 }}>\n        {availableRooms.length === 0 && (\n          <Typography>No rooms available</Typography>\n        )}\n\n        {availableRooms.map((room) => (\n          <RoomListItem\n            key={room.roomId}\n            room={room}\n            onClick={() => joinRoom(room.roomId, name)}\n          />\n        ))}\n      </Flex>\n\n      <Action onClick={() => createRoom(name)}>Create room</Action>\n    </Flex>\n  )\n}\n\nconst RoomListItem = ({ room, onClick }) => (\n  <Box>\n    <Typography\n      style={{ cursor: 'pointer', textDecoration: 'underline' }}\n      onClick={onClick}\n    >\n      {room.metadata.roomName || room.roomId}\n    </Typography>\n  </Box>\n)\n\nconst joinRoomWithReconnect = async (roomId, name) => {\n  let room,\n    sessionId = localStorage.getItem(roomId)\n\n  if (sessionId) {\n    try {\n      room = await window.colyseus.reconnect(roomId, sessionId)\n    } catch (e) {}\n  } else {\n    room = room || (await window.colyseus.joinById(roomId, { name }))\n  }\n\n  return room\n}\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Room } from './screens/Room'\nimport { Lobby } from './screens/Lobby'\nimport { Client } from 'colyseus.js'\nimport './index.css'\n\nwindow.colyseus = new Client(\n  process.env.NODE_ENV === 'production'\n    ? 'wss://daniel-deception.herokuapp.com'\n    : 'ws://localhost:3553',\n)\n\nfunction App() {\n  const [room, setRoom] = useState()\n  return room ? (\n    <Room room={room} setRoom={setRoom} />\n  ) : (\n    <Lobby setRoom={setRoom} />\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}